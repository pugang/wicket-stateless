/**
 *
 */
package com.robmcguinness.stateless;

import static com.robmcguinness.stateless.StatelessEncoder.mergeParameters;

import org.apache.wicket.markup.html.link.Link;
import org.apache.wicket.model.IModel;
import org.apache.wicket.request.Url;
import org.apache.wicket.request.mapper.parameter.PageParameters;

/**
 * @author jfk
 * 
 */
public abstract class StatelessLink<T> extends Link<T> {

	private PageParameters parameters;

	public StatelessLink(final String id) {
		this(id, null, null);
	}

	public StatelessLink(final String id, final IModel<T> model) {
		this(id, model, null);
	}

	public StatelessLink(final String id, final IModel<T> model, PageParameters params) {

		super(id, model);

		setMarkupId(id);

		this.parameters = params;
	}

	protected final PageParameters getPageParameters() {
		return parameters;
	}

	public final void setPageParameters(PageParameters params) {
		this.parameters = params;
	}

	/**
	 * Hints that this component is stateless.
	 * 
	 * @return always {@literal true}
	 * @see Link#getStatelessHint()
	 */
	@Override
	protected boolean getStatelessHint() {
		return true;
	}

	/**
	 * Adds the parameters to the {@link CharSequence} generated by the superclass.
	 * 
	 * @see Link#getURL()
	 */
	@Override
	protected CharSequence getURL() {
		final Url url = Url.parse(super.getURL().toString());

		Url mergedUrl = mergeParameters(url, parameters);
		return mergedUrl.toString();
	}
}
